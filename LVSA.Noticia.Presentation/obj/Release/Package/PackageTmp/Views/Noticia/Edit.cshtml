@model LVSA.Noticia.Presentation.ViewModels.NoticiaViewModel

@{
    string serverCDN = System.Web.Configuration.WebConfigurationManager.AppSettings["Address_LVSA.CDN.Presentation"];

    ViewBag.Title = "Notícia";
    ViewBag.Description = "Editar notícia";
}

@using (Html.BeginForm("Edit", "Noticia", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subtitulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subtitulo, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                @Html.ValidationMessageFor(model => model.Subtitulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"></label>
            <div class="col-md-10">

                @Html.HiddenFor(model => model.TextoCliente, new { @id = "Texto", @class = "col-md-12" })



                <div class="wysiwyg-editor textarea-editor" id="editor">@(new HtmlString(Model.Texto))</div>
                @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tags, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Tags, new { @class = "form-control field-tags" })
                @Html.ValidationMessage("Tags", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">@Html.DisplayNameFor(model => model.Ativo)</label>
            <div class="col-md-10">
                <div class="radio-inline">
                    <label>
                        <input class="ace" name="@Html.NameFor(model=>model.Ativo)" @(Model.Ativo ? "checked" : "") id="@Html.IdFor(model=>model.Ativo)" type="radio" value="True" />
                        <span class="lbl"> Sim</span>
                        @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                    </label>
                </div>
                <div class="radio-inline">
                    <label>
                        <input class="ace" name="@Html.NameFor(model=>model.Ativo)" @(!Model.Ativo ? "checked" : "") id="@Html.IdFor(model=>model.Ativo)" type="radio" value="False" />
                        <span class="lbl"> Não</span>
                        @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2"></label>
            <div class="col-md-10">
                @if (Model.ImagemSet != null && Model.ImagemSet.Count() > 0)
                {
                    <ul class="ace-thumbnails clearfix">
                        @{int count = 0;}
                        @foreach (var x in Model.ImagemSet)
                        {
                            <li>
                                <a class="cboxElement not-show-loading" href="data:image;base64,@System.Convert.ToBase64String(x.Valor)" data-rel="colorbox">
                                    
                                    <input class="id-image" type="hidden" name="ImagemSet[@count].Id" value="@x.Id" />
                                                                      
                                    <img src="data:image;base64,@System.Convert.ToBase64String(x.Valor)" width="150" height="150" />
                                    <div class="tags">
                                        <!-- #section:pages/gallery.tags -->
                                        <span class="label-holder">
                                            <span class="label label-info arrowed">clique para ampliar</span>
                                        </span>

                                        <!-- /section:pages/gallery.tags -->
                                    </div>
                                </a>

                                <div class="tools tools-top">
                                    <a class="delete-image" href="javascript:void(0);">
                                        <i class="ace-icon fa fa-times red"></i>
                                    </a>
                                </div>
                            </li>
                            count++;
                        }

                    </ul>

                }
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2"></label>
            <div class="col-md-9 files">
                <input type="file" name="FileSet[0]" class="Imagem" />
            </div>
            <div class="col-md-1">
                <a id="add-imagem" href="javascript:void(0);" class="btn btn-sm btn-white btn-success"><i class="fa fa-plus"></i></a>
                <a id="remove-imagem" href="javascript:void(0);" class="btn btn-sm btn-white btn-danger "><i class="fa fa-minus"></i></a>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-8">
                    <label class="col-md-3"></label>
                    <div class="col-md-9">
                        @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Autor, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                        @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2 col-sm-6">

                    <div class="col-xs-12">
                        @Html.LabelFor(model => model.PublicadoEm, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PublicadoEm, new { htmlAttributes = new { @class = "form-control datepicker-datetime", @required = "" } })
                        @Html.ValidationMessageFor(model => model.PublicadoEm, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2 col-sm-6">

                    <div class="col-xs-12">
                        @Html.LabelFor(model => model.ExpiraEm, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ExpiraEm, new { htmlAttributes = new { @class = "form-control datepicker-datetime", @required = "" } })
                        @Html.ValidationMessageFor(model => model.ExpiraEm, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AplicacaoIdSet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.ListBoxFor(model => model.AplicacaoIdSet, new SelectList(ViewBag.AplicacaoSet, "Id", "Exibicao", Model.AplicacaoIdSet), new { @class = "form-control chosen-select", @data_placeholder = "Selecione aplicações...", @required = "" })
                    @Html.ValidationMessageFor(model => model.AplicacaoIdSet, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-actions no-color">
            <div>
                <button type="submit" class="btn btn-primary" title="Salvar">Salvar <i class="glyphicon glyphicon-floppy-disk"></i></button> |
                <a href="~/Noticia" class="btn btn-default" title="Voltar para lista">Voltar para notícias <i class="glyphicon glyphicon-arrow-left"></i></a>
            </div>
        </div>
    </div>
}


@section scripts {
    <script>
        $(function () {

            $('#editor').bind("DOMSubtreeModified", function () {
                $('#Texto').val($('#editor').html());
            });

            $('#add-imagem').click(function () {
                $('.Imagem:last').parents('div.files').append('<input type="file" name="FileSet[' + $('.Imagem').length + ']" class="Imagem" />');
                LVSA.CDN.Plugins.File();
            });

            $('#remove-imagem').click(function () {
                if ($('.Imagem').length > 1)
                    $('.Imagem:last').parents('label.ace-file-input').remove();
            });

            $('.delete-image').click(function () {
                $(this).parents('li').find('.id-image').val(0);
                $(this).parents('li').find('.tags').append('<span class="label-holder"><span class="label label-danger arrowed">será removida</span></span>');
                $(this).parents('.tools').remove();
            });

        });
    </script>
}